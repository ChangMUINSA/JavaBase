package oppStandard.polymorphism;

public class Definition {
    /**
     * 动态编译： 类型：可扩展性
     * 即同一方法可以根据发送对象的不同而采用多种不同的行为方式
     * 一个对象的实际类型是确定的，但可以指向对象的引用类型有很多(父类，有关系的类）
     * 多态存在的条件：
     * 有继承关系i
     * 子类重写父类方法
     * 父类引用指向子类对象
     * 注意： 多态是方法的多态， 属性没有多态
     *
     *
     */
    /**
     * 多态注意事项：
     * 多态是方法的多态，属性没有多态
     * 父类和子类，有联系  否则：类型转换异常！ClassCastException!
     * 存在的条件： 继承关系，方法需要重写，父类引用指向子类对象！ father f1 = new son();
     * 不能重写的方法如下：
     * static 方法，属于类，它不属于实例
     * final 修饰常量
     * private方法私有
     */
}
